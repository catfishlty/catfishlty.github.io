<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Helm on Catfish</title><link>https://www.catfish.top/categories/helm/</link><description>Recent content in Helm on Catfish</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 26 Jul 2021 17:00:00 +0800</lastBuildDate><atom:link href="https://www.catfish.top/categories/helm/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes进阶（一）</title><link>https://www.catfish.top/p/k8s-inter-1/</link><pubDate>Mon, 26 Jul 2021 17:00:00 +0800</pubDate><guid>https://www.catfish.top/p/k8s-inter-1/</guid><description>Kubernetes官网文档：使用Kubernetes对象
本系列教程是在 Kubernetes初探 系列教程基础上，通过对官方文档的阅读完善各个重要知识点。
本章节将基于官网文档简化文章理解难度。
理解 Kubernetes 对象 在 Kubernetes 中，Kubernetes 对象 是持久化的实体。 Kubernetes 使用这些实体去表示整个集群的状态。它们描述了如下信息：
哪些容器化应用在运行（以及在哪些节点上） 可以被应用使用的资源 关于应用运行时表现的策略，比如重启策略、升级策略，以及容错策略 操作 Kubernetes 对象 —— 无论是创建、修改，或者删除 —— 需要使用 Kubernetes API。 比如，当使用 kubectl 命令行接口时，CLI 会执行必要的 Kubernetes API 调用， 也可以在程序中使用 客户端库直接调用 Kubernetes API。
对象规约（Spec）与状态（Status） 几乎每个 Kubernetes 对象包含两个嵌套的对象字段，它们负责管理对象的配置： 对象 spec（规约） 和 对象 status（状态） 。 对于具有 spec 的对象，你必须在创建对象时设置其内容，描述你希望对象所具有的特征： 期望状态（Desired State） 。
status 描述了对象的 当前状态（Current State），它是由 Kubernetes 系统和组件 设置并更新的。在任何时刻，Kubernetes 控制平面 都一直积极地管理着对象的实际状态，以使之与期望状态相匹配。
描述 Kubernetes 对象 创建 Kubernetes 对象时，必须提供对象的规约，用来描述该对象的期望状态， 以及关于对象的一些基本信息（例如名称）。</description></item><item><title>Kubernetes初探（十一）</title><link>https://www.catfish.top/p/k8s-basic-11/</link><pubDate>Fri, 23 Jul 2021 14:54:00 +0800</pubDate><guid>https://www.catfish.top/p/k8s-basic-11/</guid><description>Katacoda在线课：Helm Package Manager
本系列教程希望能通过交互式学习网站与传统方式结合，更高效、容易的学习知识。 本系列教程将使用 Katacoda在线学习平台 完成学习。
这个场景教你如何使用 Kubernetes 的包管理器 Helm 来部署 Redis。 Helm 简化了服务发现和部署到 Kubernetes 集群的步骤。。
&amp;ldquo;Helm is the best way to find, share, and use software built for Kubernetes.&amp;quot;
Helm 是查找、共享和使用为 Kubernetes 构建的软件的最佳方式
更多细节可以前往官网：http://www.helm.sh/
安装 Helm Helm 是一个单独的二进制文件，用于管理将 Charts 部署到 Kubernetes。 Chart 是 kubernetes 应用的一个打包单元。Helm 可以从 https://github.com/kubernetes/helm/releases 下载。
controlplane $ curl -LO https://storage.googleapis.com/kubernetes-helm/helm-v2.8.2-linux-amd64.tar.gz % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 14.</description></item></channel></rss>